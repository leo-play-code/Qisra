# Generated by Django 3.2.13 on 2022-09-22 01:23

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('testcase', '0001_initial'),
        ('project', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Testplan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_issue', models.IntegerField(blank=True, null=True)),
                ('issue_name', models.CharField(max_length=100, null=True)),
                ('name', models.CharField(max_length=100, null=True)),
                ('stage', models.CharField(blank=True, max_length=100, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_date', models.DateTimeField(auto_now=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('text', ckeditor.fields.RichTextField()),
                ('status', models.CharField(choices=[('1', 'pending'), ('2', 'Ongoing'), ('3', 'Not_start'), ('4', 'Closed')], default='3', max_length=100)),
                ('assign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Testplan_assign', to=settings.AUTH_USER_MODEL)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Testplan_creator', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='project.project')),
                ('tag', models.ManyToManyField(to='testcase.Tag')),
            ],
        ),
        migrations.CreateModel(
            name='Testplan_Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_issue', models.IntegerField(blank=True, null=True)),
                ('issue_name', models.CharField(max_length=100, null=True)),
                ('name', models.CharField(max_length=100, null=True)),
                ('stage', models.CharField(blank=True, max_length=100, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_date', models.DateTimeField(auto_now=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('text', ckeditor.fields.RichTextField()),
                ('status', models.CharField(choices=[('1', 'pending'), ('2', 'Ongoing'), ('3', 'Not_start'), ('4', 'Closed')], default='3', max_length=100)),
                ('assign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Testplan_group_assign', to=settings.AUTH_USER_MODEL)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Testplan_group_creator', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='project.project')),
                ('tag', models.ManyToManyField(to='testcase.Tag')),
                ('testcase_list', models.ManyToManyField(to='testcase.Testcase')),
            ],
        ),
        migrations.CreateModel(
            name='Testplans',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True)),
                ('number_issue', models.IntegerField(blank=True, null=True)),
                ('testcase_list', models.ManyToManyField(to='testcase.Testcase')),
                ('testplan_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testplan.testplan_group')),
            ],
        ),
        migrations.CreateModel(
            name='Testrun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(blank=True, max_length=500, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_modify', models.DateTimeField(auto_now=True, null=True)),
                ('description', ckeditor.fields.RichTextField()),
                ('status', models.CharField(choices=[('Ongoing', 'Ongoing'), ('Passed', 'Passed'), ('Failed', 'Failed'), ('Not_start', 'Not_start')], default='Not_start', max_length=100)),
                ('assign', models.ManyToManyField(related_name='Testrun_assign', to=settings.AUTH_USER_MODEL)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Testrun_creator', to=settings.AUTH_USER_MODEL)),
                ('tag', models.ManyToManyField(to='testcase.Tag')),
                ('testcase', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='testcase.testcase')),
                ('testplan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testplan.testplan')),
                ('testplans', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testplan.testplans')),
            ],
        ),
        migrations.CreateModel(
            name='Testrun_Teststep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('description', ckeditor.fields.RichTextField()),
                ('condition', ckeditor.fields.RichTextField()),
                ('actual_outcome', ckeditor.fields.RichTextField()),
                ('status', models.CharField(choices=[('Incomplete', 'Incomplete'), ('Passed', 'Passed'), ('Failed', 'Failed'), ('Blocked', 'Blocked'), ('Omitted', 'Omitted')], default='Incomplete', max_length=100)),
                ('remark', ckeditor.fields.RichTextField()),
                ('testcase', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='testplan.testrun')),
            ],
        ),
        migrations.CreateModel(
            name='Teststep_tester_upload_file',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(blank=True, max_length=100, null=True)),
                ('file', models.FileField(upload_to='uploads/testrun_teststep_excel/')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('teststep', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testplan.testrun_teststep')),
                ('uploader', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Teststep_tester_upload_file_uploader', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Testrun_Teststep_file',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(blank=True, max_length=100, null=True)),
                ('file', models.FileField(upload_to='uploads/testrun_teststep/')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('teststep', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testplan.testrun_teststep')),
                ('uploader', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Testrun_Teststep_file_uploader', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Testrun_tester_upload_file',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(blank=True, max_length=100, null=True)),
                ('file', models.FileField(upload_to='uploads/testrun_excel/')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('testrun', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testplan.testrun')),
                ('uploader', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Testrun_tester_upload_file_uploader', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Testrun_file',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(blank=True, max_length=100, null=True)),
                ('file', models.FileField(upload_to='uploads/testrun_excel/')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('testrun', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testplan.testrun')),
                ('uploader', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Testrun_file_uploader', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalTestrun_Teststep',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('description', ckeditor.fields.RichTextField()),
                ('condition', ckeditor.fields.RichTextField()),
                ('actual_outcome', ckeditor.fields.RichTextField()),
                ('status', models.CharField(choices=[('Incomplete', 'Incomplete'), ('Passed', 'Passed'), ('Failed', 'Failed'), ('Blocked', 'Blocked'), ('Omitted', 'Omitted')], default='Incomplete', max_length=100)),
                ('remark', ckeditor.fields.RichTextField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=2000, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('testcase', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='testplan.testrun')),
            ],
            options={
                'verbose_name': 'historical testrun_ teststep',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTestrun',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('number', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(blank=True, max_length=500, null=True)),
                ('date_created', models.DateTimeField(blank=True, editable=False, null=True)),
                ('date_modify', models.DateTimeField(blank=True, editable=False, null=True)),
                ('description', ckeditor.fields.RichTextField()),
                ('status', models.CharField(choices=[('Ongoing', 'Ongoing'), ('Passed', 'Passed'), ('Failed', 'Failed'), ('Not_start', 'Not_start')], default='Not_start', max_length=100)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=2000, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('creator', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('testcase', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='testcase.testcase')),
                ('testplan', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='testplan.testplan')),
                ('testplans', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='testplan.testplans')),
            ],
            options={
                'verbose_name': 'historical testrun',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTestplan_Group',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('number_issue', models.IntegerField(blank=True, null=True)),
                ('issue_name', models.CharField(max_length=100, null=True)),
                ('name', models.CharField(max_length=100, null=True)),
                ('stage', models.CharField(blank=True, max_length=100, null=True)),
                ('create_date', models.DateTimeField(blank=True, editable=False, null=True)),
                ('update_date', models.DateTimeField(blank=True, editable=False, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('text', ckeditor.fields.RichTextField()),
                ('status', models.CharField(choices=[('1', 'pending'), ('2', 'Ongoing'), ('3', 'Not_start'), ('4', 'Closed')], default='3', max_length=100)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=2000, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('assign', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('creator', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='project.project')),
            ],
            options={
                'verbose_name': 'historical testplan_ group',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTestplan',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('number_issue', models.IntegerField(blank=True, null=True)),
                ('issue_name', models.CharField(max_length=100, null=True)),
                ('name', models.CharField(max_length=100, null=True)),
                ('stage', models.CharField(blank=True, max_length=100, null=True)),
                ('create_date', models.DateTimeField(blank=True, editable=False, null=True)),
                ('update_date', models.DateTimeField(blank=True, editable=False, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('text', ckeditor.fields.RichTextField()),
                ('status', models.CharField(choices=[('1', 'pending'), ('2', 'Ongoing'), ('3', 'Not_start'), ('4', 'Closed')], default='3', max_length=100)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=2000, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('assign', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('creator', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='project.project')),
            ],
            options={
                'verbose_name': 'historical testplan',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
